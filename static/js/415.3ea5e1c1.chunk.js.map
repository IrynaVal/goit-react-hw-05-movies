{"version":3,"file":"static/js/415.3ea5e1c1.chunk.js","mappings":"wMAGaA,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACoB,IAAjBF,EAAMG,QACLH,EAAMI,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA7C,SACGK,KAFID,EAMZ,KAGR,C,uGC6BD,UA3Ca,WACX,OAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAGJ,GAA4B,IAAxBA,EAAKC,QAAQf,OACf,OAAOgB,QAAQC,OAAO,IAAIC,OAE5BV,EAASM,EAAKC,QACf,IACAI,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAY,8BACb,IACAC,SAAQ,WACPZ,GAAW,EACZ,GACJ,GAAE,KAGD,iCACE,SAAC,KAAD,CAASa,SAAS,eAClB,2CACkB,IAAjB1B,EAAMG,SAAgB,SAAC,IAAD,CAAYH,MAAOA,IACzCY,IACC,SAAC,KAAD,CACEe,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAEC,WAAY,OAAQC,YAAa,QACjDC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAK9D,C,mMC7CKC,EAAW,gCACXC,EAAU,mCAGT,SAAetB,IAAtB,4CAAO,OAAP,oBAAO,oGACkBuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBC,IAFtC,cACCE,EADD,yBAMEA,EAAStB,MANX,kEASA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,oBACiBJ,EADjB,oBADlB,cACCE,EADD,OAILG,QAAQC,IAAIJ,EAAStB,MAJhB,kBAKEsB,EAAStB,MALX,kEAQA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcC,EADd,iCAC8CQ,EAD9C,gCADlB,cACCN,EADD,OAKLG,QAAQC,IAAIJ,EAAStB,MALhB,kBAMEsB,EAAStB,MANX,kEASA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAA2BL,GAA3B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,4BACyBJ,EADzB,oBADlB,cACCE,EADD,OAILG,QAAQC,IAAIJ,EAAStB,MAJhB,kBAKEsB,EAAStB,MALX,kEAQA,SAAe8B,EAAtB,kC,aAAO,O,oBAAA,WAA8BN,GAA9B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,4BACyBJ,EADzB,2BADlB,cACCE,EADD,OAILG,QAAQC,IAAIJ,EAAStB,MAJhB,kBAKEsB,EAAStB,MALX,kE","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/getFilms.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.length !== 0 &&\n        films.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </NavLink>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { ColorRing } from 'react-loader-spinner';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { getFilms } from '../services/getFilms';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getFilms()\n      .then(data => {\n        // console.log(data);\n        // console.log(data.results);\n        if (data.results.length === 0) {\n          return Promise.reject(new Error());\n        }\n        setFilms(data.results);\n      })\n      .catch(error => {\n        toast.error('Sorry, there are no movies.');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" />\n      <h2>Trending today</h2>\n      {films.length !== 0 && <MoviesList films={films} />}\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4b190e449f27cff49b7be3cb0384f9d7';\n\n// trending/movie/day?api_key=${TOKEN}&page=\nexport async function getFilms() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  //   console.log(response.data);\n  //   console.log(response.data.results);\n  return response.data;\n}\n\nexport async function getFilmById(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    // search/movie?api_key=${TOKEN}&language=en-US&&page=${params[1]}&include_adult=false\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmCast(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmReviews(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  console.log(response.data);\n  return response.data;\n}\n// API Key: 4b190e449f27cff49b7be3cb0384f9d7\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>       trends\n\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false        film for query\n\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US      all about film\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US     cast\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1      reviews\n"],"names":["MoviesList","films","location","useLocation","length","map","id","title","to","state","from","useState","setFilms","loading","setLoading","useEffect","getFilms","then","data","results","Promise","reject","Error","catch","error","toast","finally","position","visible","height","width","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","colors","BASE_URL","API_KEY","axios","response","getFilmById","filmId","console","log","getFilmByQuery","query","getFilmCast","getFilmReviews"],"sourceRoot":""}