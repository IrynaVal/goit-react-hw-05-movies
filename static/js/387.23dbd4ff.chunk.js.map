{"version":3,"file":"static/js/387.23dbd4ff.chunk.js","mappings":"2OAEaA,E,QAAWC,GAAAA,GAAH,gD,mBC0DrB,EAtDgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAlBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,IAAeR,GACZS,MAAK,SAAAC,GAEJ,IAAKA,EACH,OAAOC,QAAQC,OAAO,IAAIC,OAE5BT,EAAWM,EAAKI,QACjB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAI,QACb,IACAC,SAAQ,WACPb,GAAW,EACZ,GACJ,GAAE,CAACN,KAGF,gCACsB,IAAnBG,EAAQiB,QACP,wBACGjB,EAAQkB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAAC1B,EAAD,YACE,qCAAayB,MACb,uBAAIC,MAFSF,EAKlB,OAGH,qEAGDjB,IACC,SAAC,KAAD,CACEoB,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAEC,WAAY,OAAQC,YAAa,QACjDC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAK9D,C,mMCxDKC,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAIEA,EAAS5B,MAJX,kEAOA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDM,EADC,oBACiBL,EADjB,oBADlB,cACCG,EADD,OAILrB,QAAQC,IAAIoB,EAAS5B,MAJhB,kBAKE4B,EAAS5B,MALX,kEAQA,SAAe+B,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CO,EAD9C,gCADlB,cACCJ,EADD,OAILrB,QAAQC,IAAIoB,EAAS5B,MAJhB,kBAKE4B,EAAS5B,MALX,kEAQA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDM,EADC,4BACyBL,EADzB,oBADlB,cACCG,EADD,OAILrB,QAAQC,IAAIoB,EAAS5B,MAJhB,kBAKE4B,EAAS5B,MALX,kEAQA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA8BgC,GAA9B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDM,EADC,4BACyBL,EADzB,2BADlB,cACCG,EADD,OAILrB,QAAQC,IAAIoB,EAAS5B,MAJhB,kBAKE4B,EAAS5B,MALX,kE","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/getFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { ListItem } from './Reviews.styled';\nimport { getFilmReviews } from 'services/getFilms';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    getFilmReviews(movieId)\n      .then(data => {\n        // console.log(data.results);\n        if (!data) {\n          return Promise.reject(new Error());\n        }\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.log('error');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <ListItem key={id}>\n                <h4>Author: {author}</h4>\n                <p>{content}</p>\n              </ListItem>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie.</p>\n      )}\n\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4b190e449f27cff49b7be3cb0384f9d7';\n\nexport async function getFilms() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getFilmById(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmCast(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmReviews(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  console.log(response.data);\n  return response.data;\n}\n"],"names":["ListItem","styled","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","getFilmReviews","then","data","Promise","reject","Error","results","catch","error","console","log","finally","length","map","id","author","content","visible","height","width","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","colors","BASE_URL","API_KEY","getFilms","axios","response","getFilmById","filmId","getFilmByQuery","query","getFilmCast"],"sourceRoot":""}