{"version":3,"file":"static/js/736.2c198d83.chunk.js","mappings":"6OAEaA,EAAQC,EAAAA,GAAAA,IAAH,yCAILC,EAAWD,EAAAA,GAAAA,GAAH,gD,6BCwDrB,EAxDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MACAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,IAAYR,GACTS,MAAK,SAAAC,GAEJ,GAAyB,IAArBA,EAAKP,KAAKQ,OACZ,OAAOC,QAAQC,OAAO,IAAIC,OAE5BV,EAAQM,EAAKP,KACd,IACAY,OAAM,SAAAC,GACLC,QAAQC,IAAI,QACb,IACAC,SAAQ,WACPb,GAAW,EACZ,GACJ,GAAE,CAACN,IAIJ,OACE,gCACmB,IAAhBG,EAAKQ,QACJ,wBACGR,EAAKiB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,UAACzB,EAAD,YACE,SAACF,EAAD,CAAO4B,IATN,kCASuBH,EAAcI,IAAKH,KAC3C,uBAAIA,KACJ,uCAAeC,OAHFH,EAMlB,OAGH,iFAEDhB,IACC,SAAC,KAAD,CACEsB,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAEC,WAAY,OAAQC,YAAa,QACjDC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAK9D,C,mMC1DKC,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAIEA,EAAS9B,MAJX,kEAOA,SAAe+B,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDM,EADC,oBACiBL,EADjB,oBADlB,cACCG,EADD,yBAKEA,EAAS9B,MALX,kEAQA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CO,EAD9C,gCADlB,cACCJ,EADD,yBAKEA,EAAS9B,MALX,kEAQA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA2BkC,GAA3B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDM,EADC,4BACyBL,EADzB,oBADlB,cACCG,EADD,yBAKEA,EAAS9B,MALX,kEAQA,SAAemC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACkBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDM,EADC,4BACyBL,EADzB,2BADlB,cACCG,EADD,yBAKEA,EAAS9B,MALX,kE","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/getFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Photo = styled.img`\n  width: 100px;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 30px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Photo, ListItem } from './Cast.styled';\nimport { ColorRing } from 'react-loader-spinner';\nimport { getFilmCast } from 'services/getFilms';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    getFilmCast(movieId)\n      .then(data => {\n        // console.log(data.cast);\n        if (data.cast.length === 0) {\n          return Promise.reject(new Error());\n        }\n        setCast(data.cast);\n      })\n      .catch(error => {\n        console.log('error');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  const posterURL = `https://image.tmdb.org/t/p/w780`;\n\n  return (\n    <>\n      {cast.length !== 0 ? (\n        <ul>\n          {cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <ListItem key={id}>\n                <Photo src={posterURL + profile_path} alt={name} />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </ListItem>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Sorry, there is no information about this movie cast.</p>\n      )}\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4b190e449f27cff49b7be3cb0384f9d7';\n\nexport async function getFilms() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getFilmById(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  // console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmCast(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmReviews(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  // console.log(response.data);\n  return response.data;\n}\n"],"names":["Photo","styled","ListItem","movieId","useParams","useState","cast","setCast","loading","setLoading","useEffect","getFilmCast","then","data","length","Promise","reject","Error","catch","error","console","log","finally","map","id","profile_path","name","character","src","alt","visible","height","width","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","colors","BASE_URL","API_KEY","getFilms","axios","response","getFilmById","filmId","getFilmByQuery","query","getFilmReviews"],"sourceRoot":""}