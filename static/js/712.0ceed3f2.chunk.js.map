{"version":3,"file":"static/js/712.0ceed3f2.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","services/getFilms.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.length !== 0 &&\n        films.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </NavLink>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  /* margin-top: 20px; */\n  width: 350px;\n  /* max-width: 600px; */\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 2px black solid;\n`;\n\nexport const StyledButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 40px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { BsSearch } from 'react-icons/bs';\nimport { SearchForm, StyledButton, FormInput } from './Searchbar.styled';\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmQuery = searchParams.get('query') ?? '';\n\n  const handleChange = evt => {\n    setQuery(evt.target.value);\n    if (evt.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: evt.target.value });\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    if (!query) {\n      toast.error(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    onSubmit(query);\n  };\n\n  return (\n    <SearchForm onSubmit={handleFormSubmit}>\n      <FormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        value={filmQuery}\n        onChange={handleChange}\n      />\n      <StyledButton type=\"submit\">\n        <BsSearch size=\"20\" fill=\"#000\" />\n      </StyledButton>\n    </SearchForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { ColorRing } from 'react-loader-spinner';\nimport { Searchbar } from '../components/Searchbar/Searchbar';\nimport { getFilmByQuery } from '../services/getFilms';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    setLoading(true);\n    getFilmByQuery(searchQuery)\n      .then(data => {\n        // console.log(data.results);\n        if (data.results.length === 0) {\n          return Promise.reject(new Error());\n        }\n        setFilms(data.results);\n        // console.log(films);\n      })\n      .catch(error => {\n        toast.error(\n          'Sorry, there are no movies matching your search query. Please try again.'\n        );\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [searchQuery]);\n\n  const formSubmitHandler = searchQuery => {\n    setSearchQuery(searchQuery);\n    // setFilms([]);\n  };\n\n  return (\n    <>\n      <Toaster position=\"top-right\" />\n      <Searchbar onSubmit={formSubmitHandler} />\n\n      {films.length !== 0 && <MoviesList films={films} />}\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4b190e449f27cff49b7be3cb0384f9d7';\n\n// trending/movie/day?api_key=${TOKEN}&page=\nexport async function getFilms() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  //   console.log(response.data);\n  //   console.log(response.data.results);\n  return response.data;\n}\n\nexport async function getFilmById(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    // search/movie?api_key=${TOKEN}&language=en-US&&page=${params[1]}&include_adult=false\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmCast(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmReviews(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  console.log(response.data);\n  return response.data;\n}\n// API Key: 4b190e449f27cff49b7be3cb0384f9d7\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>       trends\n\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false        film for query\n\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US      all about film\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US     cast\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1      reviews\n"],"names":["MoviesList","films","location","useLocation","length","map","id","title","to","state","from","SearchForm","styled","StyledButton","FormInput","Searchbar","onSubmit","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","filmQuery","get","evt","preventDefault","toast","type","autoComplete","autoFocus","value","onChange","target","size","fill","searchQuery","setSearchQuery","setFilms","loading","setLoading","useEffect","getFilmByQuery","then","data","results","Promise","reject","Error","catch","error","finally","position","visible","height","width","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","colors","BASE_URL","API_KEY","getFilms","axios","response","getFilmById","filmId","console","log","getFilmCast","getFilmReviews"],"sourceRoot":""}