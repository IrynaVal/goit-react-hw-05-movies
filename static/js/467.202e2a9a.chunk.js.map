{"version":3,"file":"static/js/467.202e2a9a.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieContainer/MovieContainer.styled.jsx","components/MovieContainer/MovieContainer.jsx","pages/MovieDetails.jsx","services/getFilms.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  margin-bottom: 20px;\n  text-decoration: none;\n  color: black;\n`;\n","import { StyledLink } from './BackLink.styled';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsArrowLeftShort />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: solid grey 2px;\n`;\n\nexport const Poster = styled.div`\n  width: 400px;\n`;\nexport const MovieDesc = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const AddInfo = styled.div`\n  padding-bottom: 20px;\n  border-bottom: solid grey 2px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport { MovieInfo, Poster, MovieDesc, AddInfo } from './MovieContainer.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieContainer = ({\n  film: {\n    title,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    poster_path,\n  },\n}) => {\n  const poster = `https://image.tmdb.org/t/p/w780${poster_path}`;\n\n  const getReleaseYear = function (date = release_date) {\n    return date ? date.slice(0, 4) : 'year n/a';\n  };\n\n  const getFilmGenres = function (genresArray = genres) {\n    if (!genresArray || genresArray.length === 0) {\n      return 'n/a';\n    }\n    return genresArray.map(genre => genre.name).join(' ');\n  };\n  return (\n    <>\n      <MovieInfo>\n        <Poster>\n          <img src={poster} alt={title} />\n        </Poster>\n        <MovieDesc>\n          <h2>\n            {original_title} ({getReleaseYear()})\n          </h2>\n          <p>User score: {(vote_average * 10).toFixed(0)}%</p>\n\n          <h3>Overview</h3>\n          {overview !== '' ? <p>{overview}</p> : <p>n/a</p>}\n          <h4>Genres</h4>\n          <p>{getFilmGenres()}</p>\n        </MovieDesc>\n      </MovieInfo>\n\n      <AddInfo>\n        <p>Additional Information</p>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </AddInfo>\n    </>\n  );\n};\n\nMovieContainer.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string })),\n    poster_path: PropTypes.string,\n  }).isRequired,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { ColorRing } from 'react-loader-spinner';\nimport { getFilmById } from 'services/getFilms';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MovieContainer } from 'components/MovieContainer/MovieContainer';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState({});\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  // console.log(location);\n  // console.log(BackLinkLocationRef.current);\n\n  useEffect(() => {\n    setLoading(true);\n    getFilmById(movieId)\n      .then(data => {\n        // console.log(data);\n        if (!data) {\n          return Promise.reject(new Error());\n        }\n        setFilm(data);\n      })\n      .catch(error => {\n        toast.error('Sorry, there is no information about this movie.');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" />\n      <BackLink to={BackLinkLocationRef.current}>Go back</BackLink>\n      <MovieContainer film={film} />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n      {loading && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4b190e449f27cff49b7be3cb0384f9d7';\n\n// trending/movie/day?api_key=${TOKEN}&page=\nexport async function getFilms() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  //   console.log(response.data);\n  //   console.log(response.data.results);\n  return response.data;\n}\n\nexport async function getFilmById(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    // search/movie?api_key=${TOKEN}&language=en-US&&page=${params[1]}&include_adult=false\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmCast(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmReviews(filmId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  console.log(response.data);\n  return response.data;\n}\n// API Key: 4b190e449f27cff49b7be3cb0384f9d7\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>       trends\n\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false        film for query\n\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US      all about film\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US     cast\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1      reviews\n"],"names":["StyledLink","styled","Link","BackLink","to","children","MovieInfo","Poster","MovieDesc","AddInfo","MovieContainer","film","title","original_title","release_date","vote_average","overview","genres","poster_path","poster","src","alt","date","slice","getReleaseYear","toFixed","genresArray","length","map","genre","name","join","getFilmGenres","movieId","useParams","useState","setFilm","loading","setLoading","location","useLocation","BackLinkLocationRef","useRef","state","from","useEffect","getFilmById","then","data","Promise","reject","Error","catch","error","toast","finally","position","current","Suspense","fallback","visible","height","width","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","colors","BASE_URL","API_KEY","getFilms","axios","response","filmId","console","log","getFilmByQuery","query","getFilmCast","getFilmReviews"],"sourceRoot":""}